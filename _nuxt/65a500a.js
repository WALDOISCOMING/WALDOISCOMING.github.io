(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{419:function(t,e,n){"use strict";n.r(e);var o={name:"Vue2MixinAndStore",components:{},data:function(){return{}},mounted:function(){},methods:{}},r=n(22),component=Object(r.a)(o,(function(){this._self._c;return this._m(0)}),[function(){var t=this,e=t._self._c;return e("div",{staticClass:"content basic-dark2-line-1px pb--50 mb--35"},[e("div",{staticClass:"inner"},[e("h5",{staticClass:"heading heading-h5 line-height-1-95 wow move-up"},[t._v("Vue mixin과 store 기초 개념에 대하여 알아보도록 합시다.”")]),t._v(" "),e("div",{staticClass:"desc mt--45 mb--50"},[e("p",[t._v("Vue에서 Vue 컴포넌트에 재사용 가능한 기능을 추가하는 mixin과 vue의 상태관리를 해주는 vuex의 store에 대하여 알아봅니다.")]),t._v(" "),e("p",[t._v("mixin은 주로 js 등에서 서술해둔 스크립트를 vue template에서 호출하여 사용하는 방식을 가집니다.")]),t._v(" "),e("p",[t._v("vuex는 vue script에서 State, Mutations, Actions, Getters요소를 통해 상태(저장된 값을) 관리합니다.")])]),t._v(" "),e("div",{staticClass:"desc mt--45 mb--50"},[e("p",[t._v("mixin 기초")]),t._v(" "),e("p",{staticClass:"inner-blog-text-10"},[t._v("mixin은 주로, 공통적으로 사용되는 string이나 date관련 유틸리티들을 바로 UI에 적용할 때 사용됩니다.")]),t._v(" "),e("p",{staticClass:"inner-blog-text-30"},[e("pre",[t._v(" mixin.js\nexport default {\n  methods: {\n    formatPhoneNumber(str) { // 간략히 전화번호의 양식을 맞추는 함수가 있습니다.\n      str = str.replace(/[^0-9]/g, '');\n      ...\n      return str;\n    }\n  }\n}\ndemo.vue\n<template>\n  <p>\n  \x3c!-- vue template안에서도, 타 method를 바로 호출하여 사용합니다.--\x3e\n    {{ formatPhoneNumber(phonNum) } }\n  </p>\n</template>\n<script>\nimport mixin from '@/mixins/mixin';\nexport default {\n  mixins: [mixin], //mixins에 사용할 mixin을 등록합니다.\n<\/script>")])]),t._v(" "),e("p",{staticClass:"inner-blog-text-30"},[t._v("\n            mixin은 전역으로 적용할 수 있지만 mixin을 전역으로 적용하면 이후에 생성된 모든 Vue 인스턴스 에 영향을 미칩니다.\n          ")])]),t._v(" "),e("div",{staticClass:"desc mt--45 mb--50"},[e("p",[t._v("vuex 기초")]),t._v(" "),e("p",{staticClass:"inner-blog-text-10"},[t._v("이전장에 설명한, props나 emit을 통해 컴포넌트 간 데이터를 처리 가능합니다.")]),t._v(" "),e("p",{staticClass:"inner-blog-text-10"},[t._v("하지만 parent-child가 1촌 관계가 아닌 복잡한 경우, 유저 관련 정보(JWT 관련), 회원가입 등 복잡한 입력이 있는 값의 저장이 필요한 경우 사용됩니다.")]),t._v(" "),e("p",{staticClass:"inner-blog-text-10"},[t._v("state")]),t._v(" "),e("p",{staticClass:"inner-blog-text-30"},[t._v("데이터. 공통으로 참조하기 위한 변수를 정의한 것입니다. 프로젝트의 모든 곳에서 이를 참조하고 사용할 수 있습니다.")]),t._v(" "),e("p",{staticClass:"inner-blog-text-10"},[t._v("mutations")]),t._v(" "),e("p",{staticClass:"inner-blog-text-30"},[t._v("state의 변경을 담당하며, mutations을 통해서만 state를 변경해야 합니다. 동기 처리 기준입니다")]),t._v(" "),e("p",{staticClass:"inner-blog-text-10"},[t._v("actions")]),t._v(" "),e("p",{staticClass:"inner-blog-text-30"},[t._v("mutations를 실행시키며, 외부에서 호출됩니다. 비동기 처리 기준입니다.")]),t._v(" "),e("p",{staticClass:"inner-blog-text-10"},[t._v("getters")]),t._v(" "),e("p",{staticClass:"inner-blog-text-30"},[t._v("외부에서 state의 값을 가져올때 사용됩니다.")]),t._v(" "),e("p",{staticClass:"inner-blog-text-30"},[t._v("유저의 권한을 가져오는 것을 예시로 간략하게 보여드리겠습니다.\n            "),e("pre",[t._v(' store/modules/layout.js\n화면에서의 layout을 변경하는 vuex 입니다.\nexport const state = () => ({\n  layoutType: "vertical",\n  layoutWidth: "fluid",\n  leftSidebarType: "light",\n  topbar: "colored",\n  loader: false,\n});\n\nexport const getters = {\n  layoutType: state => state.layoutType,\n  leftSidebarType: state => state.leftSidebarType,\n  layoutWidth: state => state.layoutWidth,\n  topbar: state => state.topbar,\n  loader: state => state.loader\n};\n\nexport const mutations = {\n  CHANGE_LAYOUT(state, layoutType) {\n    state.layoutType = layoutType;\n  },\n  CHANGE_LAYOUT_WIDTH(state, layoutWidth) {\n    state.layoutWidth = layoutWidth;\n  },\n  CHANGE_LEFT_SIDEBAR_TYPE(state, leftSidebarType) {\n    state.leftSidebarType = leftSidebarType;\n  },\n  CHANGE_TOPBAR(state, topbar) {\n    state.topbar = topbar;\n  },\n  LOADER(state, loader) {\n    state.loader = loader;\n  },\n};\n\nexport const actions = {\n  changeLayoutType({ commit }, { layoutType }) {\n    commit("CHANGE_LAYOUT", layoutType);\n  },\n  changeLayoutWidth({ commit }, { layoutWidth }) {\n    commit("CHANGE_LAYOUT_WIDTH", layoutWidth);\n  },\n  changeLeftSidebarType({ commit }, { leftSidebarType }) {\n    commit("CHANGE_LEFT_SIDEBAR_TYPE", leftSidebarType);\n  },\n  changeTopbar({ commit }, { topbar }) {\n    commit("CHANGE_TOPBAR", topbar);\n  },\n  changeLoaderValue({ commit }, { loader }) {\n    commit("LOADER", loader);\n  },\n};\n이제 위의 내용을 vuex에 등록한다.\nstore/index.js\n\nimport Vue from \'vue\'\nimport Vuex from \'vuex\'\nVue.use(Vuex)\nconst modules = {}\nconst rModules = require.context(\'./modules\', false. /\\.js$/)\nexport default new Vuex.store({\n  modules\n})\n이 등록한 vuex를 vue에 등록한다.\nmain.js\nimport store from \'./store\'\n...\nnew Vue({\n ...,\n store\n ...\n})\n\ndemo.vue\n<template>\n  <div>\n    <compoment :width="layout.layoutWidth" />\n  \x3c!-- map getter를 사용해 가져온 값을 바인딩합니다.--\x3e\n  </div>\n</template>\n<script>\nimport { mapGetters } from "vuex"; // state\nexport default {\n  computed: mapGetters(["layout"]),\n  methods: {\n      changeWidth(width) { // action을 호출해 줍니다.\n      this.$store.dispatch("changeLayoutWidth", {\n        layoutWidth: width,\n      });\n    },\n<\/script>')])])])]),t._v(" "),e("div",{staticClass:"mt--45 mb--50"},[e("p",[t._v("참고자료")]),t._v(" "),e("a",{attrs:{href:"https://kr.vuejs.org/v2/guide/"}},[t._v("https://kr.vuejs.org/v2/guide/")]),t._v(" "),e("a",{attrs:{href:"http://ccambo.github.io/Dev/Vue/5.what-is-the-store-in-vuex/"}},[t._v("http://ccambo.github.io/Dev/Vue/5.what-is-the-store-in-vuex/")])])])}],!1,null,null,null);e.default=component.exports}}]);