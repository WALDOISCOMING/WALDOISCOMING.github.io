(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{416:function(e,t,n){"use strict";n.r(t);var l={name:"TranscompileAndPolyfill",components:{},data:function(){return{}},mounted:function(){}},r=n(22),component=Object(r.a)(l,(function(){this._self._c;return this._m(0)}),[function(){var e=this,t=e._self._c;return t("div",{staticClass:"content basic-dark2-line-1px pb--50 mb--35"},[t("div",{staticClass:"inner"},[t("h5",{staticClass:"heading heading-h5 line-height-1-95 wow move-up"},[e._v("“transcompile과 polyfill, 그리고 Babel에 대하여 알아보도록 합시다.”")]),e._v(" "),t("div",{staticClass:"desc mt--45 mb--50"},[t("p",[e._v("이전에 설명드린 것 처럼, ECMAScript의 기능들은 강력하고 적절한 기능들이 많지만 ES6가 초기에 나왔을 때, 지원되는 브라우저가 적어 기능이 동작하지 않은 경우가 많았습니다.")]),e._v(" "),t("p",[e._v("이러한 이슈를 회피하기 위해 "),t("code",[e._v("transcompile")]),e._v("와 "),t("code",[e._v("polyfill")]),e._v("이라는 개념을 통해 이슈를 회피합니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-10"},[e._v("compile은 한 언어로 작성된 소스 코드를 다른 언어(Java -> Bytecode)로 변환하는 것입니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-10"},[e._v("transcompile은 한 언어로 작성된 소스 코드를 비슷한 추상화(abstraction)를 가지는 다른 언어(c++->c, javascript ES6 -> javascript ES5)로 변환하는 것입니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-10"},[t("a",{attrs:{href:"https://babeljs.io/repl"}},[e._v("babel 클라우드 테스트 환경")]),e._v("에서 간략한, transcompile 예시를 보여드리겠습니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-10"},[e._v("화살표 함수가 기본 함수 형식으로 변환되고, for/of 형식이 기본 for문으로 변환되었습니다.")]),e._v(" "),t("img",{staticClass:"w-100",attrs:{src:"/img/web-development/babel-transcompile.png",alt:"babel transcompile"}}),e._v(" "),t("p",{staticClass:"inner-blog-text-10"},[e._v("transcompile은 기존에 있던 함수를 통해, 버전에 맞추어 변환해주는 기능입니다. 하지만 아래를 보시면 Promise 같이 새로 생긴 객체는 변환되지 않고 그대로 가져오고 있습니다.")]),e._v(" "),t("img",{staticClass:"w-100",attrs:{src:"/img/web-development/babel-promise.png",alt:"babel promise"}}),e._v(" "),t("p",{staticClass:"inner-blog-text-10"},[e._v("polyfill은 충전솜이라는 의미로, 브라우저에서 지원하지 않는 코드를 사용가능한 코드 조각이나 플러그인로 채워 넣는 것을 말합니다.")])]),e._v(" "),t("div",{staticClass:"desc mt--45 mb--50"},[t("p",[e._v("Vue 예제를 통해 transcompile과 polyfill 작업을 진행하도록 하겠습니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-10"},[e._v("Vue3 프로젝트 개요")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("Node js(16.14.2) | NPM(8.5.5) @vue/cli(5.0.8)"),t("code",[e._v("공유드리는 버전은 제가 사용한 버전으로, 맞추실 필요는 없습니다.")])]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[t("a",{attrs:{href:"https://nodejs.org/ko/download/"}},[e._v("Node js")]),e._v("설치 하신뒤 시스템 환경 변수를 설정 해 주세요.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("위의 다운로드는 NPM도 포함되므로 추가 설정을 하시면 NPM은 따로 설치해 주세요.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("NPM까지 모두 설치완료 되시면 "),t("strong",[e._v("cmd)")]),e._v(" npm install -g @vue/cli 를 입력해주세요.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("정상적으로 설치가 되셨으면,("),t("strong",[e._v("cmd)")]),e._v(" vue -V를 치고 정상적일 경우) "),t("strong",[e._v("cmd)")]),e._v(" vue create 프로젝트이름 으로 입력하시고, vue버전은 vue3으로 선택해주세요.")]),e._v(" "),t("img",{staticClass:"w-100",attrs:{src:"/img/web-development/transpoly-create-vue.png",alt:"vue 3 project create"}}),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("프로젝트를 생성하고 나면 기본적인 폴더 구조는 아래와 같이 구성됩니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[t("pre",[e._v("├─ public"),t("br"),e._v("├─ babel.config.js"),t("br"),e._v("├─ jsconfig.json"),t("br"),e._v("├─ package.json"),t("br"),e._v("├─ vue.config.js"),t("br"),e._v("├─ src"),t("br"),e._v("   ├─ main.js"),t("br"),e._v("   ├─ App.vue")])]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[t("strong",[e._v("vue.config.js")]),e._v(" 임시 프로젝트이므로 테스트 중 eslint때문에 문법오류가 잦게 일어나면 disable 하시고 진행하세요.\n            "),t("pre",[e._v("const { defineConfig } = require('@vue/cli-service')\nmodule.exports = defineConfig({\n  //lintOnSave: false,\n  transpileDependencies: true\n})\n            ")])]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("먼저 src/components/HelloWorld.vue에 들어가, script 부분을 아래와 같이 변경해 주세요")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[t("strong",[e._v("HelloWorld.vue")]),e._v(" 화면이 처음 생성될때 transcompile과 polyfill이 필요한 내용들을 몇개 추가합니다.\n            "),t("pre",[e._v("<script setup>\nimport { onMounted } from 'vue'\nonMounted(() => {\n  // ES6 transcompile\n  let arrowF = (x,y)=> { return x+y }\n  console.log('arrow Function' , arrowF(1,2));\n  // polyfill\n  const myPromise = new Promise(function(myResolve, myReject) {\n    setTimeout(function() {\n      myResolve(\"resolve success\");\n      myReject(\"reject success\");\n    }, 3000);\n  });\n  myPromise.then(function(value) {\n    console.log('myPromise resolved : ', value)\n  });\n  // ECMAScript 2019\n  let text1 = \"     Hello World!     \";\n  let text2 = text1.trimStart();\n  console.log('trimStart : ', text2)\n})\n<\/script>\n            ")])]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("위 내용을 작성하신 뒤, "),t("strong",[e._v("cmd)")]),e._v("npm install, "),t("strong",[e._v("cmd)")]),e._v("npm run serve을 실행뒤 브라우저에서 개발자모드(크롬 F12)를 키신 뒤, 아래와 같이 로그가 뜨는지 확인합니다.")]),e._v(" "),t("img",{staticClass:"w-100",attrs:{src:"/img/web-development/transpoly-serve-log.png",alt:"babel transcompile"}}),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("상세 스펙은 "),t("a",{attrs:{href:"https://babeljs.io/docs/en/babel-preset-env"}},[e._v("https://babeljs.io/docs/en/babel-preset-env")]),e._v(" 에서 확인하세요.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("plugin-transform-runtime core-js 또는 @babel/polyfill 을 직접 import해서 생기는 global scope 오염 문제를(Promise, Set Map..) sandboxed 환경을 생성하여 해결합니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("이제 "),t("strong",[e._v("cmd)")]),e._v("npm build를 하여 transcompile, polyfill를 진행해 봅시다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[t("strong",[e._v("babel.config.js")]),e._v(" "),t("pre",[e._v('module.exports = {\n\tpresets: [\n\t  [\n\t\t  \'@vue/cli-plugin-babel/preset\',\n\t\t  {\n\t\t\t"targets": {\n\t\t\t\t"browsers" : ["last 2 versions", "ie >= 11"]\n\t\t\t},\n      "useBuiltIns": "usage" // usage는 사용한 라이브러리만, "entry"는 사용하지 않은 내용도 포함합니다.\n\t\t  }\n\t  ]\n\t],\n  plugins: [\n    [\n      \'@babel/plugin-transform-runtime\',\n      {\n        "corejs": "3",\n      },\n    ],\n  ],\n}\n            ')]),e._v(" "),t("pre",[e._v('package.json\n{\n...\n  "scripts": {\n    "serve": "vue-cli-service serve",\n    "build": "vue-cli-service build",\n    "lint": "vue-cli-service lint"\n  },\n  "dependencies": {\n    "@babel/runtime-corejs3": "^7.20.7",\n    "core-js": "^3.8.3",\n    "vue": "^3.2.13"\n  },\n  "devDependencies": {\n    "@babel/core": "^7.12.16",\n    "@babel/eslint-parser": "^7.12.16",\n    "@babel/plugin-transform-runtime": "^7.19.6",\n    "@vue/cli-plugin-babel": "~5.0.0",\n    "@vue/cli-plugin-eslint": "~5.0.0",\n    "@vue/cli-service": "~5.0.0",\n    "eslint": "^7.32.0",\n    "eslint-plugin-vue": "^8.0.3"\n  },...\n}\n            ')])]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("이후, "),t("strong",[e._v("cmd)")]),e._v("npm run build를 한 뒤, dist(기본 빌드 폴더)로 진입하여 app.hashcode.js에서 내용을 확인합니다. ")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[t("strong",[e._v("app.hash.js")]),e._v("에서는 arrow function이 변환된 것이 확인됩니다.\n            "),t("pre",[e._v('app.hash.js\n...\n(function(){var t=function(t,e){return t+e};console.log("arrow Function",t(1,2))\n...\n            ')]),e._v(" "),t("pre",[e._v("chunk-vendors.hash.js.map\n...\nnode_modules/core-js/modules/es.promise.js\n...\n            ")]),e._v(" "),t("pre",[e._v("node_modules/core-js/modules/es.promise.js\n...\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.promise.constructor');\nrequire('../modules/es.promise.all');\nrequire('../modules/es.promise.catch');\nrequire('../modules/es.promise.race');\nrequire('../modules/es.promise.reject');\nrequire('../modules/es.promise.resolve');\n...\n            ")])]),t("p",{staticClass:"inner-blog-text-30"},[e._v("이를 통해, 정상적으로 transcompile과 polyfill가 되는걸 확인 가능합니다.")]),e._v(" "),t("p",{staticClass:"inner-blog-text-30"},[e._v("정상적으로 진행한것 같은데, 문제가 발생되시면 node_modules 폴더를 제거 후, "),t("strong",[e._v("cmd)")]),e._v("npm install "),t("strong",[e._v("cmd)")]),e._v("npm run build 진행해 주세요.")]),e._v(" "),t("p")])]),e._v(" "),t("div",{staticClass:"mt--45 mb--50"},[t("p",[e._v("참고자료")]),e._v(" "),t("a",{attrs:{href:"https://ideveloper2.tistory.com/166"}},[e._v("https://ideveloper2.tistory.com/166")]),t("br"),e._v(" "),t("a",{attrs:{href:"https://babeljs.io/docs/en/"}},[e._v("https://babeljs.io/docs/en/")]),t("br"),e._v(" "),t("a",{attrs:{href:"https://royleej9.tistory.com/entry/babel-setting"}},[e._v("https://royleej9.tistory.com/entry/babel-setting")]),t("br"),e._v(" "),t("a",{attrs:{href:"https://tech.kakao.com/2020/12/01/frontend-growth-02/"}},[e._v("https://tech.kakao.com/2020/12/01/frontend-growth-02/")]),t("br")])])}],!1,null,null,null);t.default=component.exports}}]);